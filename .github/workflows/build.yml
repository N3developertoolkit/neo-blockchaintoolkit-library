name: Build libBCTK

on:
  pull_request:
    branches:
      - master
      - develop
      - release/*
  push:
    branches:
      - master
      - develop
      - release/*
    paths-ignore:
      - 'readme.md'
      - 'CHANGELOG.md'
      - 'docs/**'

env:
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/ngdenterprise/Build/_packaging/public/nuget/v3/index.json
  CONFIGURATION: 'Release'
  DOTNET_VERSION: '6.0.x'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-11, macos-12, ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install RocksDB Dependencies
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update
        sudo apt-get install libsnappy-dev libc6-dev librocksdb-dev -y
    - name: Build and Test
      run: |
        dotnet restore
        dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity normal
        dotnet test --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"
    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: test/test.bctklib/TestResults/*/coverage.cobertura.xml
        format: markdown

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }} 
    - name: Pack
      run: |
        dotnet restore
        dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity normal
        dotnet pack --configuration ${{ env.CONFIGURATION }} --output ./out --no-build --verbosity normal
        rm ./out/*.snupkg
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./out
    - name: Push to Azure Artifacts
      if: ${{ (github.event_name == 'push') }}
      run: dotnet nuget push --api-key AzureArtifacts out/*.nupkg